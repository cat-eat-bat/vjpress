import{_ as a,c as i,o as n,a4 as t}from"./chunks/framework.CPoHb7av.js";const o=JSON.parse('{"title":"MFA","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"config/slardar/mfa.md","filePath":"config/slardar/mfa.md","lastUpdated":1742968648000}'),l={name:"config/slardar/mfa.md"};function p(h,s,e,k,r,d){return n(),i("div",null,s[0]||(s[0]=[t(`<h1 id="mfa" tabindex="-1">MFA <a class="header-anchor" href="#mfa" aria-label="Permalink to &quot;MFA&quot;">​</a></h1><p>配置双因子认证的参数设置：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">slardar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  mfa</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    enabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # 是否开启 mfa 双因子认证 默认关闭</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    otp-mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">email</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # otp 一次性密码的模式 默认是 email 如果是自定义实现 这里需要指定为自定义的 模式名称</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    email</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># otp 模式的邮箱参数设置</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      host</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">smtp.163.com</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">25</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      username</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">who@163.com</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      password</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">xxxxx</span></span></code></pre></div>`,3)]))}const c=a(l,[["render",p]]);export{o as __pageData,c as default};
