import{_ as i,c as a,o as e,a4 as t}from"./chunks/framework.DUGjnzQQ.js";const l="/vjpress/images/sso_login.png",E=JSON.parse('{"title":"SSO 单点登录","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"guide/slardar/sso.md","filePath":"guide/slardar/sso.md","lastUpdated":1748050960000}'),n={name:"guide/slardar/sso.md"};function h(p,s,d,k,o,c){return e(),a("div",null,s[0]||(s[0]=[t(`<h1 id="sso-单点登录" tabindex="-1">SSO 单点登录 <a class="header-anchor" href="#sso-单点登录" aria-label="Permalink to &quot;SSO 单点登录&quot;">​</a></h1><p>前后端分离模式下实现单点登录功能。</p><h2 id="流程" tabindex="-1">流程 <a class="header-anchor" href="#流程" aria-label="Permalink to &quot;流程&quot;">​</a></h2><p>假设有两个应用服务sso-client1、sso-client2，以及一个认证服务 sso-server，为方便起见，下述过程中分别简写为 SC1、SC2、SS。</p><ul><li><p>客户端访问 <code>SC1</code> 首页，向 <code>SC1</code> 发起请求，验证当前是否已登录（登录状态是否有效）</p></li><li><p><code>SC1</code> 验证登录状态：通过web请求 <code>SS</code> 进行身份验证 ，如果有效，则返回用户信息结束 如果无效 则跳转到登录路由，在登录路由页面， 先请求 <code>SC1</code> 获取认证中心地址，（如 <code>/sso/auth</code>）<code>SC</code> 后台拼接地址返回，前端接受到地址，在回调里转向到该地址（eg： <code>http://xxx/sso/auth?redirectUrl=xxx.com?back=xxx.com</code>） 此时，<code>SS</code> 接受到认证请求，跳转到 <code>SS</code> 的默认登录页面(如: <code>/sso-login</code>)，进行登录后(此时<code>SS</code>的前端页面会缓存登录成功后的 <code>token</code>)，派发 <code>ticket</code> 并重定向到 上述的前端页面，前端页面加载时 判断 <code>ticket</code> 是否存在，若存在，则使用 <code>ticket</code> 值访问 <code>SC1</code> 接口，验证身份并拿到 <code>token</code> ，完成登录</p></li><li><p>在上述前提下，客户端访问 <code>SC2</code> 首页，<code>SC2</code> 服务端验证当前是否已登录，未登录，则跳转到 <code>SS</code> 的登录页， 此时由于已经有了 <code>token</code>， 则无需输入用户名密码，自动生成 <code>ticket</code>，跳转到 <code>SC2</code> 的回调地址, <code>SC2</code> 服务端拿到 <code>ticket</code>，调用 <code>SS</code> 接口验证 <code>ticket</code>并换取<code>token</code>，返回到<code>SC2</code>前端页面，<code>SC2</code>前端缓存<code>token</code>，后续接着访问其他业务接口</p></li></ul><h2 id="sso服务端" tabindex="-1">SSO服务端 <a class="header-anchor" href="#sso服务端" aria-label="Permalink to &quot;SSO服务端&quot;">​</a></h2><p>引入依赖</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;cn.piesat.v&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;slardar-sso-server-starter&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;1.1.1-SNAPSHOT&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>其他和正常的 slardar 服务一样配置即可，默认的 sso 端点是 <code>/sso/*</code>，也可以通过配置来修改:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">slardar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  sso</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    ctx-path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/my-sso</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 修改为自定义的端点前缀</span></span></code></pre></div><h2 id="sso客户端" tabindex="-1">SSO客户端 <a class="header-anchor" href="#sso客户端" aria-label="Permalink to &quot;SSO客户端&quot;">​</a></h2><p>在sso客户端引入依赖:</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;cn.piesat.v&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;slardar-sso-client-starter&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;1.1.1-SNAPSHOT&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>修改配置，指定 sso 服务端地址:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">slardar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  sso</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    server-url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">http://localhost:9600/my-sso</span></span></code></pre></div><h2 id="测试验证" tabindex="-1">测试验证 <a class="header-anchor" href="#测试验证" aria-label="Permalink to &quot;测试验证&quot;">​</a></h2><p>模拟客户端服务的页面访问后跳转到 <code>http://localhost:9600/sso/auth?url=https://xxx.client.com</code></p><p><img src="`+l+'" alt="sso" loading="lazy"></p>',18)]))}const g=i(n,[["render",h]]);export{E as __pageData,g as default};
