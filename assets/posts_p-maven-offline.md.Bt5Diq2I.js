import{_ as l,C as s,c as p,o,j as e,G as i,a4 as h,a as d}from"./chunks/framework.BK_Jm2_s.js";const C=JSON.parse('{"title":"maven 离线模式打包","description":"","frontmatter":{"title":"maven 离线模式打包","date":"2025-03-25T00:00:00.000Z","tags":["maven","java"],"outline":"deep"},"headers":[],"relativePath":"posts/p-maven-offline.md","filePath":"posts/p-maven-offline.md","lastUpdated":1758787375000}'),r={name:"posts/p-maven-offline.md"};function k(c,a,m,v,g,f){const n=s("PostMeta"),t=s("PostNav");return o(),p("div",null,[a[0]||(a[0]=e("h1",{id:"maven-离线模式打包",tabindex:"-1"},[d("maven 离线模式打包 "),e("a",{class:"header-anchor",href:"#maven-离线模式打包","aria-label":'Permalink to "maven 离线模式打包"'},"​")],-1)),i(n),a[1]||(a[1]=h(`<p>主要描述maven如何在 offline 模式下，实现clean package等</p><h2 id="在线下载依赖" tabindex="-1">在线下载依赖 <a class="header-anchor" href="#在线下载依赖" aria-label="Permalink to &quot;在线下载依赖&quot;">​</a></h2><p>需要先在线模式下，下载好应用所需要的所有依赖包（包含工程依赖、打包用到的maven插件依赖等）</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建离线依赖的本地目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /data/repo-offline</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 下载依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mvn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  dependency:go-offline</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Dmaven.repo.local=/data/repo-offline</span></span></code></pre></div><h2 id="离线模式执行" tabindex="-1">离线模式执行 <a class="header-anchor" href="#离线模式执行" aria-label="Permalink to &quot;离线模式执行&quot;">​</a></h2><p>此时，可以打开离线模式，执行编译、打包等：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mvn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  clean</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> package</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --offline</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -P</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build-app-jar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Dmaven.repo.local=/data/repo-offline</span></span></code></pre></div>`,7)),i(t)])}const _=l(r,[["render",k]]);export{C as __pageData,_ as default};
