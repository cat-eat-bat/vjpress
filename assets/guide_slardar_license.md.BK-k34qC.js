import{_ as e,c as r,o as t,a4 as o}from"./chunks/framework.BK_Jm2_s.js";const u=JSON.parse('{"title":"授权许可","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"guide/slardar/license.md","filePath":"guide/slardar/license.md","lastUpdated":1758872527000}'),d={name:"guide/slardar/license.md"};function l(i,a,s,n,c,h){return t(),r("div",null,[...a[0]||(a[0]=[o('<h1 id="授权许可" tabindex="-1">授权许可 <a class="header-anchor" href="#授权许可" aria-label="Permalink to &quot;授权许可&quot;">​</a></h1><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>我们在实际项目中，会遇到开发的项目部署在服务器上，但可能要控制权限、控制项目授权周期等，部署的环境可能纯内网使用，因此通过网络接口控制就不可行了，我们期望一种分发授权证书的形式，通过部署证书的形式，离线控制用户能使用这个项目的哪个模块、使用多久，甚至使用用户的哪些设备、哪台服务器可以使用。 因此，在<code>slardar</code>体系中,实现了一个用于离线控制授权的模块 <code>slardar-license</code></p><h2 id="原理" tabindex="-1">原理 <a class="header-anchor" href="#原理" aria-label="Permalink to &quot;原理&quot;">​</a></h2><h2 id="快速使用" tabindex="-1">快速使用 <a class="header-anchor" href="#快速使用" aria-label="Permalink to &quot;快速使用&quot;">​</a></h2><h2 id="其他说明" tabindex="-1">其他说明 <a class="header-anchor" href="#其他说明" aria-label="Permalink to &quot;其他说明&quot;">​</a></h2>',6)])])}const p=e(d,[["render",l]]);export{u as __pageData,p as default};
